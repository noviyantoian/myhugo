

[build]
publish = "public"
command = "npm i && hugo --gc --minify"

[[plugins]]
  package = "netlify-plugin-gridsome-cache"

[[plugins]]
  package = "netlify-plugin-hugo-cache-resources"

	[plugins.inputs]
	# If it should show more verbose logs (optional, default = true)
	debug = true
	# Relative path to source directory in case you use Hugo's "--s" option
	srcdir = "path/to/website"

[[plugins]]
  package = "netlify-plugin-image-optim"

[[plugins]]
  package = "netlify-plugin-inline-critical-css"

  # All inputs are optional, so you can omit this section.
  # Defaults are shown below.
  [plugins.inputs]
    # A filter used to target specific files in the publish directory. Be sure to only target HTML files. This option is passed onto the readdirp library, see https://github.com/paulmillr/readdirp#options for more info.
    fileFilter = ["*.html"]

    # A filter used to target or ignore specific directories in the publish directory. This option is passed onto the readdirp library, see https://github.com/paulmillr/readdirp#options for more info.
    directoryFilter = ["!node_modules"]

    # You can refer to `critical`’s documentation: https://github.com/addyosmani/critical for all options below.
    # Whether to minify the generated critical-path CSS.
    minify = true

    # Whether to remove the inlined styles from any stylesheet referenced in the HTML. Use with caution. Removing the critical CSS per page results in a unique async loaded CSS file for every page, meaning you can’t rely on cache across multiple pages.
    extract = false

    # An array of objects containing `width` and `height` properties to deliver critical CSS for multiple screen resolutions.
    dimensions = [
      { width = 414, height = 896 },
      { width = 1920, height = 1080 }
    ]

[[plugins]]
package = "netlify-plugin-subfont"


[context.production.environment]
HUGO_VERSION = "0.86.1"
HUGO_ENV = "production"
HUGO_ENABLEGITINFO = "true"

[context.split1]
command = "hugo --gc --minify --enableGitInfo"

[context.split1.environment]
HUGO_VERSION = "0.86.1"
HUGO_ENV = "production"

[context.deploy-preview]
command = "hugo --gc --minify --buildFuture -b $DEPLOY_PRIME_URL"

[context.deploy-preview.environment]
HUGO_VERSION = "0.86.1"

[context.branch-deploy]
command = "hugo --gc --minify -b $DEPLOY_PRIME_URL"

[context.branch-deploy.environment]
HUGO_VERSION = "0.86.1"

[context.next.environment]
HUGO_ENABLEGITINFO = "true"

[[headers]]
  for = "/img/*"
  [headers.values]
    Cache-Control = "public, s-max-age=604800"
[[headers]]
  for = "css/*.css"
  [headers.values]
    Cache-Control = "public, s-max-age=604800"
[[headers]]
  for = "js/*.js"
  [headers.values]
    Cache-Control = "public, s-max-age=604800"




[[redirects]]
  from = "https://www.noviyanto.com/indosat-internet-lemot/"
  to = "https://www.noviyanto.com/blog/internet-indosat-lemot/"
  status = 301
  force = true

[[redirects]]
  from = "https://www.noviyanto.com/cara-mencegah-masuk-angin-menggunakkan-teh-panas-campur-tolak-angin/"
  to = "https://www.noviyanto.com/blog/cara-mencegah-masuk-angin-menggunakkan-teh-panas-campur-tolak-angin/"
  status = 301
  force = true

[[redirects]]
  from = "https://www.noviyanto.com/yang-perlu-kamu-tau-tentang-adobe-pemiere-pro-cc/"
  to = "https://www.noviyanto.com/blog/yang-perlu-kamu-tau-tentang-adobe-pemiere-pro-cc/"
  status = 301
  force = true